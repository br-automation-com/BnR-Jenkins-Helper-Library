{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"B&amp;R Jenkins Helper Scripts","text":""},{"location":"#groovy-scripts","title":"Groovy Scripts","text":"<p>Groovy scripts can be called directly from your jenkins pipeline</p>"},{"location":"#general-purpose","title":"General Purpose","text":"<ul> <li>ExportASLibrary - Exports a library from an Automation Studio project in binary format</li> <li>FrameworkExport - Creates a zip file for importing using the mapp Framework Import tool</li> <li>SendNotifications - Sends notifications to a MS Teams channel</li> <li>GetResources - Helper script which returns the path the resources used by this library</li> <li>UploadToGitHub - Uploads a file to a GitHub project</li> </ul>"},{"location":"#projectversion-information","title":"Project/Version Information","text":"<ul> <li>Version - Returns the version number in the V&lt;Major&gt;.&lt;Minor&gt;.&lt;Bugfix&gt;.&lt;Number&gt; format.  Version information is based on the latest repository tag and the branch name</li> <li>MajorVersionNumber - Returns just the Major version number</li> <li>MinorVersionNumber - Returns just the Minor version number</li> <li>BugFixVersionNumber - Returns just the BugFix version number</li> <li>IsReleaseCandidate - Returns true if the branch is a release candidate branch (release/*)</li> <li>IsReleaseBranch - Returns true if this is the main branch, false otherwise</li> <li>IsHotFix - Returns true if this is a hotfix branch, false otherwise</li> <li>BranchName - Returns the branch name from the repository</li> <li>Tag - returns the latest tag from the repository</li> </ul>"},{"location":"#build-scripts","title":"Build Scripts","text":"<ul> <li>BuildASProject - Builds an Automation Studio project configuration</li> <li>BuildARsimStructure - Builds the ARSim directory structure</li> <li>MSBuild - Builds a Visual Studio project</li> </ul>"},{"location":"#test-scripts","title":"Test Scripts","text":"<ul> <li>RunArUnitTests - Starts an ArSim instance and runs the available unit tests</li> <li>RunMappViewIntegrationTests - Runs the mapp View integration tests</li> <li>ProcessArTestResults - Converts the output of the AR unit tests into a format for Jenkins</li> </ul>"},{"location":"#python-scripts","title":"Python Scripts","text":"<p>Python scripts can not be called directly from your Jenkins pipeline, most of these are used internally in the Groovy</p> <p>For others you can call them from a Jenkins pipeline using the following syntax</p> <pre><code>powershell(script: \"python '${GetResources()}/scripts/Export.py' --arg1 'argument'\");)\n</code></pre>"},{"location":"#automation-studio-helpers","title":"Automation Studio Helpers","text":"<ul> <li>ASProject - Loads an Automation Studio project into a python class</li> <li>AsProjectCompile - Builds an Automation Studio project</li> <li>CreateArSimInstallation - Creates the ArSim install folder</li> <li>Export - Exports a zip file for importing with the mapp Framework Import tool</li> <li>InstalledAS - Returns a list of all Automation Studio installations on the computer</li> <li>LibraryExport - Exports a binary version of a library</li> <li>ModuleOK - Verifies that all module's ModuleOK input is being monitored</li> <li>ProcessCodeCoverage - Generates a html and xml file with the code coverage data</li> <li>RunUnitTests - Runs the unit tests in ArSim</li> <li>StartArSim - Starts an ArSim instance and wait for it to be in run mode before returning</li> <li>StopArSim - Stops an ArSim instance</li> </ul>"},{"location":"#general","title":"General","text":"<ul> <li>DirUtils - Directory helper utility functions used by other scripts</li> <li>UploadToGitHub - Uploads a file to GitHub</li> <li>Zip - Creates a Zip archive of a directory</li> </ul>"},{"location":"groovy/build/","title":"Build","text":""},{"location":"groovy/build/#buildasproject","title":"BuildASProject","text":"<p>Builds an Automation Studio project configuration</p> <p>Usage: <pre><code>BuildASProject(project: \"${PROJECT_DIR}\", configuration: \"${CONFIG_NAME}\", max_warnings: -1, buildpip: true);\n</code></pre></p> <p>Options:</p> Name Description Default project Full path to the Automation Studio project None configuration name of the configuration to build None max_warnings Maximum number of warnings before the build is considered failed None buildpip whether to build the Project Installation Package false"},{"location":"groovy/build/#buildarsimstructure","title":"BuildARsimStructure","text":"<p>Builds the ARSim directory structure</p> <p>Usage: <pre><code>BuildARsimStructure(project: \"${PROJECT_DIR}\", configuration: \"${CONFIG_NAME}\");\n</code></pre></p> <p>Options:</p> Name Description Default project Full path to the Automation Studio project None configuration Name of the configuration to build None"},{"location":"groovy/build/#msbuild","title":"MSBuild","text":"<p>Returns the path of the MS build tool</p> <p>Usage: <pre><code>MSBuild_Path = MSBuild();\n</code></pre></p>"},{"location":"groovy/general_purpose/","title":"General Purpose","text":""},{"location":"groovy/general_purpose/#exportaslibrary","title":"ExportASLibrary","text":"<p>Exports a library from an Automation Studio project in binary format. The library must already be compiled before the export is called.</p> <p>Usage: <pre><code>ExportASLibrary(project: \"$PROJECT_DIR\", library: \"MyLib\", directory: \"Export\")\n</code></pre> Options:</p> Name Description Default project Full path to the directory containing the Automation Studio Project None library Name of the source code library None directory Relative path to the directory to export the library to None"},{"location":"groovy/general_purpose/#frameworkexport","title":"FrameworkExport","text":"<p>Creates a zip file for importing using the mapp Framework Import tool</p> <p>Usage: <pre><code>FrameworkExport(project: \"$PROJECT_DIR\", config: \"Documentation.json\", output: \"Framework\\\\Services\", physical: \"Physical\\\\Simulation\");\n</code></pre></p> <p>Options:</p> Name Description Default project Full path to the directory containing the Automation Studio Project None config Name of the export configuration json file None output Relative path to the location where the export file(s) will be placed None phsyical Relative path to the physical directory None"},{"location":"groovy/general_purpose/#sendnotifications","title":"SendNotifications","text":"<p>Sends notifications to a MS Teams channel Usage: <pre><code>SendNotifications(recipients: \"${EMAIL_LIST}\", buildStatus: currentBuild.result);\n</code></pre></p> <p>Options:</p> Name Description Default recipients semicolon seperated email list of users to notify None buildStatus build result None"},{"location":"groovy/general_purpose/#getresources","title":"GetResources","text":"<p>Helper script which returns the path the resources used by this library Usage: <pre><code>GetResources();\n</code></pre></p>"},{"location":"groovy/general_purpose/#uploadtogithub","title":"UploadToGitHub","text":"<p>Uploads a file to a GitHub project</p> <p>Usage: <pre><code>UploadToGitHub(version: \"${RELEASE_VERSION}\", organization: \"${REPO_ORGANIZATION}\", name: \"${REPO_NAME}\", file: \"${WORKSPACE}\\\\${fileNameArSim}\");\n</code></pre></p> <p>Options:</p> Name Description Default version version number of this release None organization GitHub organization name None name Name of the repository None file relative path to the file None"},{"location":"groovy/test/","title":"Test","text":""},{"location":"groovy/test/#runarunittests","title":"RunArUnitTests","text":"<p>Starts an ArSim instance and runs the available unit tests Usage: <pre><code>RunArUnitTests(project: \"$PROJECT_DIR\", configuration: \"UnitTest\", tests: \"all\", output: 'TestResults', port: 80);\n</code></pre></p> <p>Options:</p> Name Description Default project Full path to the Automation Studio project None configuration Name of the configuration to build UnitTest tests Which test suite to run all output Path to save the test results to TestResults port Which port number ArSim's webserver is running on 80"},{"location":"groovy/test/#runmappviewintegrationtests","title":"RunMappViewIntegrationTests","text":"<p>Runs the mapp View integration tests Usage: <pre><code>RunMappViewIntegrationTests(project: \"$PROJECT_DIR\", configuration: \"Simulation\", integrationTestDir: \"IntegrationTests\");\n</code></pre></p> <p>Options:</p> Name Description Default project Full path to the Automation Studio project None configuration Name of the configuration to build Simulation integrationTestDir Full path to location of integration tests folder None"},{"location":"groovy/test/#processartestresults","title":"ProcessArTestResults","text":"<p>Converts the output of the AR unit tests into a format for Jenkins Usage: <pre><code>ProcessArTestResults(testResults: \"TestResults\");\n</code></pre></p> <p>Options:</p> Name Description Default testResults Relative path the test results TestResults"},{"location":"groovy/version/","title":"Version","text":""},{"location":"groovy/version/#version_1","title":"Version","text":"<p>Returns the version number in the V&lt;Major&gt;.&lt;Minor&gt;.&lt;Bugfix&gt;.&lt;Number&gt; format.  Version information is based on the latest repository tag and the branch name</p> <p>Usage: <pre><code>Version(workspace:  \"${WORKSPACE}\");\n</code></pre></p> <p>Options:</p> Name Description Default workspace Full path workspace None"},{"location":"groovy/version/#majorversionnumber","title":"MajorVersionNumber","text":"<p>Returns just the Major version number</p> <p>Usage: <pre><code>MajorVersionNumber(workspace:  \"${WORKSPACE}\");\n</code></pre></p> <p>Options:</p> Name Description Default workspace Full path workspace None"},{"location":"groovy/version/#minorversionnumber","title":"MinorVersionNumber","text":"<p>Returns just the Minor version number</p> <p>Usage: <pre><code>MinorVersionNumber(workspace:  \"${WORKSPACE}\");\n</code></pre></p> <p>Options:</p> Name Description Default workspace Full path workspace None"},{"location":"groovy/version/#bugfixversionnumber","title":"BugFixVersionNumber","text":"<p>Returns just the BugFix version number</p> <p>Usage: <pre><code>BugFixVersionNumber(workspace:  \"${WORKSPACE}\");\n</code></pre></p> <p>Options:</p> Name Description Default workspace Full path workspace None"},{"location":"groovy/version/#isreleasecandidate","title":"IsReleaseCandidate","text":"<p>Returns true if the branch is a release candidate branch (release/*)</p> <p>Usage: <pre><code>IsReleaseCandidate(workspace:  \"${WORKSPACE}\");\n</code></pre></p> <p>Options:</p> Name Description Default workspace Full path workspace None"},{"location":"groovy/version/#isreleasebranch","title":"IsReleaseBranch","text":"<p>Returns true if this is the main branch, false otherwise</p> <p>Usage: <pre><code>IsReleaseBranch(workspace:  \"${WORKSPACE}\");\n</code></pre></p> <p>Options:</p> Name Description Default workspace Full path workspace None"},{"location":"groovy/version/#ishotfix","title":"IsHotFix","text":"<p>Returns true if this is a hotfix branch, false otherwise</p> <p>Usage: <pre><code>IsHotFix(workspace:  \"${WORKSPACE}\");\n</code></pre></p> <p>Options:</p> Name Description Default workspace Full path workspace None"},{"location":"groovy/version/#branchname","title":"BranchName","text":"<p>Returns the branch name from the repository</p> <p>Usage: <pre><code>BranchName(workspace:  \"${WORKSPACE}\");\n</code></pre></p> <p>Options:</p> Name Description Default workspace Full path workspace None"},{"location":"groovy/version/#tag","title":"Tag","text":"<p>returns the latest tag from the repository</p> <p>Usage:</p> <pre><code>Tag(workspace:  \"${WORKSPACE}\");\n</code></pre> <p>Options:</p> Name Description Default workspace Full path workspace None"},{"location":"python/asproject/","title":"Asproject","text":"<pre><code>classDiagram\n  ASProject &lt;|-- ASConfiguration\n  ASProject &lt;|-- ASPackage\n  ASPackage &lt;|-- ASTask\n  ASPackage &lt;|-- ASLibrary\n\n  class ASProject{\n    +string version\n    +string workingVersion\n    +string projectName\n    -string _projectDir\n    -List~ASConfiguration~ _configurations\n    -List~ASPackage~ _packages\n\n    +IsCompatibleVersion(string version)\n    +CleanProject()\n    +findLibrary(string libraryName)\n    +exportLibrary(string libraryName, string directory)\n    +export(list files, string directory, string name)\n  }\n  class ASConfiguration{\n    -string _name\n    -string _directory\n    -string _cpuName\n    -string _arVersion\n    -string _plcType\n    +readIoMap()\n    +areAllModuleSupervised()\n    +modulesNotSupervised()\n  }\n\n  class ASPackage{\n    -string _name\n    -string _directory\n    +List~ASPackage~ packages\n    +List~ASTask~ tasks\n    +List~ASLibrary~ libraries\n    +List files\n  }\n\n  class ASTask{\n    -string _name\n    -string _directory\n  }\n\n  class ASLibrary{\n    +export(string directory)\n  }</code></pre>"},{"location":"python/automation_studio/","title":"Build","text":""},{"location":"python/automation_studio/#asproject","title":"ASProject","text":"<p>Loads an Automation Studio project into a python class</p> <p>Usage: <pre><code>    project = ASProject(r'C:\\project\\TestProject')\n</code></pre></p> <p>Options:</p> Name Type Description Default projectDir String Full path to the Automation Studio project None"},{"location":"python/automation_studio/#asprojectcompile","title":"AsProjectCompile","text":"<p>Builds an Automation Studio project</p> <p>Usage: <pre><code>    python AsProjectCompile.py --project C:\\project\\TestProject --configuration arsim\n</code></pre></p> <p>Options:</p> Name Description Default --project,-p Full path to the Automation Studio project None --configuration,-c Name of the configuration to build None --maxwarnings,-w Max number of warning before the build is considered failed -1 --buildpip,-b Whether to build the Project Instation Package False --no-clean,-n Whether to clean the project before building False"},{"location":"python/automation_studio/#createarsiminstallation","title":"CreateArSimInstallation","text":"<p>Creates the ArSim install folder</p> <p>Usage: <pre><code>    python CreateArSimInstallation.py --project C:\\project\\TestProject --configuration arsim --simulationDirectory C:\\ArSim\n</code></pre></p> <p>Options:</p> Name Description Default --project,-p Full path to the Automation Studio project None --configuration,-c Name of the configuration to build None --simulationDirectory,-s Max number of warning before the build is considered failed None"},{"location":"python/automation_studio/#export","title":"Export","text":"<p>Exports a zip file for importing with the mapp Framework Import tool</p> <p>Usage: <pre><code>    python Export.py --project C:\\project\\TestProject --configuration Test.json --physical Physical\\Simulation --output Installer\n</code></pre></p> <p>Options:</p> Name Description Default --project,-p Full path to the Automation Studio project None --config,-c Name of the configuration to build None --physical,-s Relative path to the physical directory location None --output,-o Output directory where the export files are saved to None --zip,-z Whether to zip the directory or not True"},{"location":"python/automation_studio/#installedas","title":"InstalledAS","text":"<p>Returns information on Installed Automation Studio versions</p> <p>Usage: <pre><code>    project = ASProject(r'C:\\projects\\Test')\n    asPath = InstalledAS.ASInstallPath(project)\n</code></pre></p>"},{"location":"python/automation_studio/#libraryexport","title":"LibraryExport","text":"<p>Exports a binary version of a library</p> <p>Usage: <pre><code>    python LibraryExport.py --project C:\\project\\TestProject --library MyLib\n</code></pre></p> <p>Options:</p> Name Description Default --project,-p Full path to the Automation Studio project None --library,-l Name of the library to build None --directory,-d Directory to store the compiled library .\\"},{"location":"python/automation_studio/#moduleok","title":"ModuleOk","text":"<p>Verifies that all module's ModuleOK input is being monitored</p> <p>Usage: <pre><code>    python ModuleOk.py --project C:\\project\\TestProject --configuration arsim\n</code></pre></p> <p>Options:</p> Name Description Default --project,-p Full path to the Automation Studio project None --configuration,-c Name of the configuration to build None --output,-o Whether to output a warning or an error if a ModuleOk is not monitored Warning"},{"location":"python/automation_studio/#processcodecoverage","title":"ProcessCodeCoverage","text":"<p>Generates a html and xml file with the code coverage data</p> <p>Usage: <pre><code>    python ProcessCodeCoverage.py --project C:\\project\\TestProject --configuration arsim\n</code></pre></p> <p>Options:</p> Name Description Default --project,-p Full path to the Automation Studio project None --config,-c Name of the configuration to build None --output,-o Output directory for generated files CodeCoverage"},{"location":"python/automation_studio/#rununittests","title":"RunUnitTests","text":"<p>Runs the unit tests in ArSim</p> <p>Usage: <pre><code>    python RunUnitTests.py --test all\n</code></pre></p> <p>Options:</p> Name Description Default --test,-t Name of the tests to run (all to run all tests discovered) None --output,-o Output directory to store the test results in TestsResults --port,-p Port number that AR's webserver is running on 80"},{"location":"python/automation_studio/#startarsim","title":"StartArSim","text":"<p>Starts an ArSim instance and wait for it to be in run mode before returning</p> <p>Usage: <pre><code>    python StartArSim.py --simulationDirectory C:\\ArSim\n</code></pre></p> <p>Options:</p> Name Description Default --simulationDirectory,-s Path to the ArSim installation directory to start None"},{"location":"python/automation_studio/#stoparsim","title":"StopArSim","text":"<p>Stops an ArSim instance</p> <p>Usage: <pre><code>    python StopArSim.py --simulationDirectory C:\\ArSim\n</code></pre></p> <p>Options:</p> Name Description Default --simulationDirectory,-s Path to the ArSim installation directory to start None"},{"location":"python/general/","title":"General","text":""},{"location":"python/general/#dirutils","title":"DirUtils","text":"<p>Directory helper utility functions used by other scripts</p>"},{"location":"python/general/#removedir","title":"removeDir","text":"<p>Deletes the directory and all content in it</p> <p>Usage: <pre><code>    removeDir(rf'C:\\ArSim')\n</code></pre></p> <p>Options:</p> Name Type Description directory String Path to the directory to delete"},{"location":"python/general/#cleandirectory","title":"CleanDirectory","text":"<p>Deletes all content in the directory but does not delete the directory itself</p> <p>Usage: <pre><code>    CleanDirectory(r'C:\\ArSim')\n</code></pre></p> <p>Options:</p> Name Type Description directory String Path to the directory to clean"},{"location":"python/general/#createdirectory","title":"CreateDirectory","text":"<p>Creates a directory if it does not already exist</p> <p>Usage: <pre><code>    CreateDirectory(r'C:\\ArSim')\n</code></pre></p> <p>Options:</p> Name Type Description directory String Path to the directory to clean"},{"location":"python/general/#zipdirectory","title":"ZipDirectory","text":"<p>Creates a Zip archive with the contents of the directory</p> <p>Usage: <pre><code>    ZipDirectory(r'C:\\ArSim', r'C:\\ArSim')\n</code></pre></p> <p>Options:</p> Name Type Description directory String Path to the directory to zip zipfile String Filename of the zip file"},{"location":"python/general/#uploadtogithub","title":"UploadToGitHub","text":"<p>Uploads a file to GitHub</p> <p>Usage: <pre><code>    C:\\&gt;UploadToGitHub.ps1 V1.0.0 br-automation-com mappFramework 'C:\\ArSim.zip'\n</code></pre></p> <p>Options:</p> Type Description string Version tag string User or Organization string Repository name string Filename"},{"location":"python/general/#zip","title":"Zip","text":"<p>Creates a Zip archive of a directory</p> <p>Usage: <pre><code>    C:\\&gt;python Zip.py --folder 'C:\\ArSim'\n</code></pre></p> <p>Options:</p> Name Description Default --folder,-f Path to the directory to zip None"}]}